#!/usr/bin/env bash
# ex: set tabstop=8 softtabstop=0 expandtab shiftwidth=2 smarttab:

set -ue
[ -n "${DEBUG_BASH:-}" ] && set -xv
DEBUG="${DEBUG:-}"

FORCE=""
SECTION="all"

function check_section {
  if [ "${SECTION}" == "all" ]; then
    return 0
  fi

  if egrep --quiet "^${SECTION}\$" <<<${SECTION}; then
    return 0
  fi
  return 1
}

function forced {
  if [ "${FORCE}" != "1" ]; then
    if check_section "${1,,}"; then
      return 0
    else
      return 1
    fi
  else
    return 1
  fi
}

################### Args Parser ###################
POSITIONAL=()
while [[ $# -gt 0 ]]
do
  key="$1"

  case $key in
    -f|--force)
      FORCE="1"
      shift # past argument
    ;;

    -s|--section)
      SECTION="${2,,}"
      if ! check_section '(all)'; then
        >&2 echo "There are no option '${SECTION}' for --section"
        exit 1
      fi
      shift # past argument
      shift # past value
    ;;

    *) # unknown option
      POSITIONAL+=("$1") # save it in an array for later
      shift # past argument
    ;;
  esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters
###################################################


system_type="$(uname -s)"
if [ "${system_type}" == "Linux" ]; then
  source "/etc/os-release"
fi


if [[ "${ID:-}" == "ubuntu" ]]; then
  if [ "$(dpkg --list build-essential cmake vim-nox python3-dev \
          | grep '^ii' | wc -l)" -lt 4 ]; then
    sudo apt install -y build-essential cmake vim-nox python3-dev
  fi

elif [[ "${ID:-}" =~ ^(manjaro|arch) ]]; then
  _packages='cmake gcc make python'
  if ! pacman -Q ${_packages} > /dev/null; then
    sudo pacman -Sy --needed --noconfirm ${_packages}
  fi
elif [ "$(uname)" == "Darwin" ]; then
  _packages='cmake python mono go nodejs'
  brew install ${_packages}
fi


### Config GIT
git config --global core.askPass ~/.local/bin/git-ask-pass.sh

### Config VIM
if command -v vim >/dev/null 2>&1; then
  if [ ! -d "$HOME/.vim/bundle/Vundle.vim" ]; then
    git clone https://github.com/VundleVim/Vundle.vim.git "$HOME/.vim/bundle/Vundle.vim"
  fi

  echo "Bootstraping Vim"
  env SHELL=$(which sh) vim +BundleInstall! +qall
  vim '+PlugUpdate' '+PlugClean!' '+PlugUpdate' '+qall'

  if [ ! -f "${HOME}/.vim/bundle/YouCompleteMe/third_party/ycmd/ycm_core.so" ]; then
    "${HOME}/.vim/bundle/YouCompleteMe/install.py"
  fi
fi

### Config TMUX
if command -v tmux >/dev/null 2>&1; then
  if [ ! -d "$HOME/.tmux/plugins/tpm" ]; then
    git clone https://github.com/tmux-plugins/tpm "$HOME/.tmux/plugins/tpm"
    "$HOME/.tmux/plugins/tpm/bin/install_plugins"
  fi

  echo "Bootstraping tmux"
  "$HOME/.tmux/plugins/tpm/bin/update_plugins" all
fi


